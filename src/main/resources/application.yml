server:
  context-path: /universal

spring:
  profiles:
    active: dev
  #------------ 数据库配置项 ------------
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    #连接池配置（由于springboot还不支持druid所以这里需要自己定制）
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
  jpa:
    database: mysql
    #show sql
    show-sql: true
    generate-ddl: true
    #ddl auto
    hibernate:
      ddl-auto: update
      naming:
        strategy: org.hibernate.cfg.ImprovedNamingStrategy
    #dialect
#    database-platform: org.hibernate.dialect.MySQL5Dialect
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
  #------------ redis config ------------
  redis:
    pool:
      # 连接池最大连接数（使用负值表示没有限制）
      max-active: 8
      # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: -1
      # 连接池中的最大空闲连接
      max-idle: 8
      # 连接池中的最小空闲连接w
      min-idle: 0
    # 连接超时时间（毫秒
    timeout: 0
  #------------ AMQ config ------------
  activemq:
    packages:
      trust-all: false
      trusted:
    pool:
      enabled: false
      expiry-timeout: 0
      idle-timeout: 30000
      max-connections: 1
#------------ mybatis config ------------
mybatis:
  config-location: classpath:mybatis/mybatis-config.xml
  mapper-locations: classpath:mybatis/mapper/*/*.xml